#libraries
library(readxl)
library(dplyr)
library(tidyr)
#read data
kmejec  <- function(inputkmejec){
  read_excel(inputkmejec, sheet = 1)
}
#bind data
kme1 <- c("km2abr15.xls")
kme2 <- c("7. Kms 1° Quincena Abril 2015.xls")
km_month <- function(kme1, kme2){
  km_month <- bind_rows(kmejec(kme1), kmejec(kme2))
  names(km_month) <- c("Mes", "Fecha", "Unidad", "Tipo_de_km", "Evento_POE", "Tipo_de_dia", 
                       "Tipo_de_Bus", "km_dia", "km_POE", "km_Apoyo", "km_inyecciones")
  km_month$Evento_POE <- as.character(km_month$Evento_POE)
  km_month
}
#km_month(kme1, kme2)
############################################
km_U6_PO <- function(kme1, kme2){
#subset
km_U6 <- filter(km_month(kme1, kme2), Unidad == "U6")
km_U6_PO <- filter(km_U6, Tipo_de_km == "PO")
km_U6_PO <- km_U6_PO[,c(2,6,8)]
#Adding ID to be able to apply the spread function
km_U6_PO$row <- 1:nrow(km_U6_PO)
#binding data as a Pivot Table
km_U6_PO <- km_U6_PO %>% spread(key = Tipo_de_dia, value = km_dia)
#rm rows ID
km_U6_PO <- km_U6_PO[,-2]
km_U6_PO}
##########################################
#rm dates columns to sum the num columns
km_U6_PO_Dia <- function(kme1, kme2){
  km_U6_PO_Dia <-  km_U6_PO(kme1, kme2)[,2:4]
  #km by day
  km_U6_PO_Dia <- colSums(km_U6_PO_Dia, na.rm = T)
  km_U6_PO_Dia}
########################################
#all the km
Tot_km_U6_PO <- sum(km_U6_PO_Dia(kme1, kme2), na.rm = T)
##############nº of days per PO
km1 <- function(kme1, kme2, date){
  filter(km_U6_PO(kme1, kme2), Fecha < date)}
km2 <- function(kme1, kme2, date){
  filter(km_U6_PO(kme1, kme2), Fecha >= date)}
#i.e. km2(kme1, kme2,'2015-04-25')
diasn <- function(km){
  DomU6n <- subset(km[, 1:2], !is.na(km$Domingo))
  DomU6n <- DomU6n %>% group_by(Fecha) %>% summarise(Dom = sum(Domingo))
  DLNU6n <- subset(km[, c(1,3)], !is.na(km$Laboral))
  DLNU6n <- DLNU6n %>% group_by(Fecha) %>% summarise(DLN=sum(Laboral))
  SabU6n <- subset(km[, c(1,4)], !is.na(km$Sábado))
  #dplyr doesn't recognize columns name with accents, so let's remove it
  names(SabU6n) <- c("Fecha","Sabado")
  SabU6n <- SabU6n %>% group_by(Fecha) %>% summarise(Sabado = sum(Sabado))
  ndias <- c(length(DomU6n$Dom), length(DLNU6n$DLN), length(SabU6n$Sabado))
  names(ndias) <- c("Domingo", "Laboral", "Sábado")
  ndias
}
#i.e. diasn(km2(kme1, kme2,'2015-04-25'))
days_PO <- as.data.frame(rbind(diasn(km1(kme1, kme2,'2015-04-25')), diasn(km2(kme1, kme2,'2015-04-25'))))
days_PO <- days_PO[c(2, 3, 1)]
##########################################################################
#read compara
#check the variable is "km" in the compara sheet (6)
#eliminate "combine" from the excel
#the sheet numbers are '3' or '4'
PO_km  <- function(sheetnum){
  if ((sheetnum >= 5) | (sheetnum <= 2 )) stop ("put the right number")
  Compara_km <- read_excel("Consolidado 2012-2013 final yyyy.xlsx", sheet = sheetnum, skip = 6)
  names(Compara_km) <- c("U.N.", "Codigo_TS", "Codigo_Usuario", "Sentido", "PRENOC1",  "NOC",  "TNOC",	"PMA",	
                "TPMA",	"FPMA",	"PMD",	"FPTA",	"PTA",	"TPTA",	"FPNOC",	"PRENOC2",	"PRENOC_SAB1",	
                "NOC_SAB",	"TSAB_MAÑ",	"PMA_SAB",	"MAÑ_SAB",	"PMDSAB",	"TARDE_SAB", "TSAB_NOC",	
                "PRE_NOC_SAB2",	"PRE_NOC_DOM1",	"NOC_DOM",	"TDOM_MAÑ",	"MAÑ_DOM",	"MED_DOM",
                "TAR_DOM",	"T_DOM_NOC",	"PRE_NOC_DOM2")
  Compara_km[1:118,]
}
##############################################
#all the km per type of day 
km_RBU <- function(sheetnum){
  if ((sheetnum >= 5) | (sheetnum <= 2 )) stop ("put the right number")
  PO_km(sheetnum) %>% group_by(Zona = substr(Codigo_Usuario, 1, 1)) %>% 
    summarise(DLN = sum(PRENOC1, NOC,  TNOC, PMA, TPMA, FPMA,	PMD,	FPTA,	PTA,	TPTA,	FPNOC,	PRENOC2), 
              SAB = sum(PRENOC_SAB1, NOC_SAB,	TSAB_MAÑ,	PMA_SAB,	MAÑ_SAB,	PMDSAB,	TARDE_SAB, 
                        TSAB_NOC, PRE_NOC_SAB2), 
              DOM = sum(PRE_NOC_DOM1,  NOC_DOM,	TDOM_MAÑ,	MAÑ_DOM,	MED_DOM, TAR_DOM,	T_DOM_NOC,	
                        PRE_NOC_DOM2)) 
}
km_Zona <- rbind(km_RBU(3), km_RBU(4))
km_Zona$PO <- c("PO1", "PO1", "PO2", "PO2")
#km_Zona <- km_Zona %>% group_by(Zona) %>% summarise(DLN = sum(DLN), SAB = sum(SAB), DOM = sum(DOM))
km_ZonaB <- subset(km_Zona, km_Zona$Zona == "B")
km_ZonaC <-subset(km_Zona, km_Zona$Zona == "C")
km_totB <- km_ZonaB[c(-1, -5)] * days_PO
km_totC <- km_ZonaC[c(-1, -5)] * days_PO
km_B <- summarise(km_totB, km_B = sum(DLN, SAB, DOM))
km_C <- summarise(km_totC, km_C = sum(DLN, SAB, DOM))
cbind(km_B, km_C)
